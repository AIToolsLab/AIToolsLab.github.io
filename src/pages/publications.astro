---

import Layout from '../layouts/Layout.astro';

const publications = [
  {
    title: "Towards Full Authorship with AI: Supporting Revision with AI-Generated Views",
    url: "https://arxiv.org/abs/2403.01055",
    image: "/pubs/haigen24/featured.png",
    imageAlt: "Textfocals UI showing AI-generated views in sidebar",
    authors: ["Jiho Kim", "Ray C. Flanagan", "Noelle E. Haviland", "ZeAi Sun", "Souad N. Yakubu", "Edom A. Maru", "Kenneth C. Arnold"],
    venue: "HAI-GEN Workshop at ACM IUI 2024",
    date: "March 18, 2024",
    tags: ["HCI", "NLP", "Undergrad"],
    description: `We introduce Textfocals, a UI prototype designed to investigate a human-centered approach that emphasizes the user's role in writing. Textfocals supports the writing process by providing LLM-generated summaries, questions, and advice in a sidebar, encouraging reflection and self-driven revision while maintaining full authorship.A formative user study with Textfocals showed promising evidence that this approach might help users develop underdeveloped ideas, cater to the rhetorical audience, and clarify their writing.`,
    links: [
      { label: "ðŸ“„ Paper", url: "https://arxiv.org/abs/2403.01055", color: "bg-blue-600 hover:bg-blue-700" },
      { label: "ðŸ“Š Poster", url: "/pubs/haigen24/Arnold-Kim-Poster2023.pdf", color: "bg-gray-600 hover:bg-gray-700" }
    ]
  },
  {
    title: "Promoting End-to-End Intentionality with Large Language Models",
    url: "/pubs/cognitive-engagement/poster-summer2024.pdf",
    image: "/pubs/cognitive-engagement/featured.png",
    imageAlt: "Research diagram showing cognitive engagement with AI suggestions",
    authors: ["Jason Chew", "Daniel Kim", "Jiho Kim", "Ray Flanagan", "Kenneth C. Arnold"],
    venue: "Calvin STEM Poster Fair",
    date: "October 25, 2024",
    tags: ["HCI", "NLP", "Undergrad"],
    description: `In Summer 2024, our team of undergraduate students conducted a study on how the type of information suggested by an AI writing assistant affects writersâ€™ cognitive engagement with the suggestion and how they appropriate that suggestion in their draft. We developed a Microsoft Word sidebar  that offered next-sentence suggestions expressed in four different ways: in addition to predictive-text-style examples they could use verbatim (e.g., by copy-and-paste), we also allowed writers to request questions that the next sentence might answer, vocabulary they might use, and rhetorical moves (such as giving examples or considering counterarguments) that their next sentence might engage with.<br><br>In a pilot study (N=8), writers found questions and rhetorical moves to be useful and friendly. Although writers chose to request examples more often, they often rejected the suggested text. Overall, they rated the Questions suggestion type as most compelling in post-task surveys, followed by Examples. These preliminary results suggest that writers welcomed AI suggestions that could not be inserted verbatim into their documents but instead required further thought. Overall, by offering intentionally-incomplete suggestions like Questions or Rhetorical Moves, AI systems might become better cognitive partners for writers, enriching thinking rather than circumventing it. This work has been presented at an internal poster fair; we are designing a follow-up experiment to build on these findings for broader publication.`,
    links: [
      { label: "ðŸ“Š Poster", url: "/pubs/cognitive-engagement/poster-summer2024.pdf", color: "bg-gray-600 hover:bg-gray-700" }
    ]
  }
];
---

<Layout title="Publications" metaDescription="Research publications from the Thoughtful AI Tools Lab at Calvin University">
  <main>
    <section class="px-8 py-20 mx-auto max-w-screen-xl">
      <div class="container mx-auto">
        <h1 class="text-5xl font-bold text-center mb-12 text-blue-gray-900">Publications</h1>
        
        <div class="grid gap-8 lg:grid-cols-1 xl:grid-cols-1">
          {publications.map((pub) => (
            <div class="bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden">
              <div class="flex flex-col lg:flex-row">
                <div class="lg:w-1/3 relative group cursor-pointer" onclick={`openImageModal('${pub.image}', '${pub.imageAlt}')`}>
                  <img src={pub.image} alt={pub.imageAlt} class="w-full h-48 lg:h-full object-cover transition-transform duration-300 group-hover:scale-105" />
                  <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-300 flex items-center justify-center">
                    <div class="text-white opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-sm font-medium">
                      Click to expand
                    </div>
                  </div>
                </div>
                <div class="lg:w-2/3 p-6">
                  <h3 class="text-xl font-semibold mb-2 text-blue-gray-900">
                    {pub.url ? (
                      <a href={pub.url} target="_blank" class="hover:text-blue-500 transition-colors">{pub.title}</a>
                    ) : (
                      pub.title
                    )}
                  </h3>
                  <p class="text-gray-600 mb-3">Authors: {pub.authors.join(", ")}</p>
                  <p class="text-gray-600 mb-3 text-sm">{pub.venue}{pub.date ? ` â€¢ ${pub.date}` : ''}</p>
                  <div class="flex flex-wrap gap-2 mb-3">
                    {pub.tags.map(tag => (
                      <span class={`px-2 py-1 rounded-full text-sm ${tag === 'HCI' ? 'bg-blue-100 text-blue-800' : tag === 'NLP' ? 'bg-green-100 text-green-800' : 'bg-purple-100 text-purple-800'}`}>{tag}</span>
                    ))}
                  </div>
                  <p class="text-gray-700 mb-4" set:html={pub.description}></p>
                  <div class="flex gap-3">
                    {pub.links.map(link => (
                      <a href={link.url} target="_blank" class={`inline-flex items-center px-3 py-1 ${link.color} text-white text-sm rounded transition-colors`}>
                        {link.label}
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
    
    
  </main>

  <!-- Image Modal -->
  <div id="imageModal" class="fixed inset-0 bg-black bg-opacity-75 z-50 hidden flex items-center justify-center p-0 w-full h-full overflow-auto" onclick="closeImageModal()">
    <div class="relative w-full h-full flex items-center justify-center">
      <img id="modalImage" src="" alt="" class="object-contain rounded-lg max-w-[95vw] max-h-[90vh] w-auto h-auto mx-auto my-auto">
      <button 
        onclick="closeImageModal()" 
        class="absolute top-4 right-4 text-white bg-black bg-opacity-50 rounded-full w-8 h-8 flex items-center justify-center hover:bg-opacity-75 transition-all"
      >
        âœ•
      </button>
    </div>
  </div>

  <script>
    window.openImageModal = function(imageSrc, altText) {
      const modal = document.getElementById('imageModal');
      const modalImage = document.getElementById('modalImage') as HTMLImageElement;
      if (!modalImage) return; // Ensure modalImage exists
      modalImage.src = imageSrc;
      modalImage.alt = altText;
      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }

    window.closeImageModal = function() {
      const modal = document.getElementById('imageModal') as HTMLDivElement;
      if (!modal) return; // Ensure modal exists
      modal.classList.add('hidden');
      document.body.style.overflow = 'auto';
    }

    // Close modal on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        window.closeImageModal();
      }
    });
  </script>
</Layout>
